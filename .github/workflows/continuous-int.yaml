name:  Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x
    - name: Determine current environment
      run: |
        echo "Branch name:  ${{ github.ref_name }}"
        environment=$(bash deployment/retrieve-environment.sh ${{ github.ref_name }})
        echo "Environment:  $environment"
        echo "environment=$environment" >> $GITHUB_ENV

    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.DEPLOY_CLIENT_ID }} -p ${{ secrets.DEPLOY_SECRET }} --tenant ${{ secrets.TENANT_ID }}
    - name: Azure Subscription Set
      run: az account set --name ${{ secrets.SUBSCRIPTION }}

    - name: Deploy infra
      run: |
        cd deployment/infra
        bash deploy-infra.sh ${{ secrets.RESOURCE_GROUP }} $environment \
        ${{ secrets.TENANT_ID }}  ${{ secrets.DEPLOY_CLIENT_ID }}
    - name: Copy 
      run: |
        rootBlobUrl=$(az storage account list -g vp-kusto-x --query "[0].primaryEndpoints.blob" --output tsv)
        az storage copy --source code/Kustox.IntegratedTests/Storage --destination "${rootBlobUrl}test" --recursive

    - name: Patch version workbench
      id:  patch-version-workbench
      run: python3 deployment/manage-version.py code/Kustox.Workbench/Kustox.Workbench.csproj ${{ github.run_number }}
    - name: Install dependencies
      run: dotnet restore code
    - name: .NET Build All
      run: dotnet build code --configuration Release --no-restore
    
    - name: .NET Build workbench
      run: dotnet build code/Kustox.Workbench --configuration Release --no-restore
    - name: .NET Publish workbench
      run: dotnet publish code/Kustox.Workbench --configuration Release --no-restore --output workbench

    - name: Retrieve docker registry
      run: |
        echo "Environment:  $environment"
        registry=$(az acr list -g ${{ secrets.RESOURCE_GROUP }} --query "[?starts_with(@.name, '$environment')].name" -o tsv)
        echo "Registry:  $registry"
        echo "registry=$registry" >> $GITHUB_ENV


    # See https://learn.microsoft.com/en-us/azure/container-registry/container-registry-quickstart-task-cli
    - name:  Docker Build / Push workbench
      run:  |
        az acr build --image kustox/workbench:${{ steps.patch-version-workbench.outputs.full-version }} \
          --registry $registry \
          --file deployment/docker/workbench/Dockerfile workbench

    # - name: Deploy infra
    #   run: |
    #     cd deployment/infra
    #     bash deploy-infra.sh ${{ secrets.RESOURCE_GROUP }} $environment \
    #     ${{ steps.patch-version-workbench.outputs.full-version }} \
    #     ${{ secrets.TENANT_ID }}  ${{ secrets.APP_ID }} ${{ secrets.APP_SECRET }}
