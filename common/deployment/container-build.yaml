parameters:
  appVersionTxtPath:  ''
  appVersionCsPath:  ''
  componentName: ''
  projectName: ''
  imageName:  ''
jobs:
  - deployment:  build_container
    displayName: Build Container
    environment:  build
    pool:
      vmImage: 'ubuntu-latest'
    variables: []
    strategy:
      runOnce:
        deploy:
          steps:
          # Checkout:  https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git#checkout
          - checkout: self
          # Bash script:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/bash?view=azure-devops
          - task: Bash@3
            displayName:  mkdir package
            inputs:
              targetType: inline
              script: mkdir package
          # Python script:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/python-script
          - task: PythonScript@0
            displayName: 'Manage Version'
            inputs:
              scriptPath: 'common/deployment/manage-version.py'
              arguments: '${{ parameters.appVersionTxtPath }} ${{ parameters.appVersionCsPath }} $(Build.BuildId) package/full-version.txt'
          # .NET Core tests:  https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/dotnet-core#run-your-tests
          - task: DotNetCoreCLI@2
            displayName: 'Run Unit Tests'
            inputs:
              command: test
              projects: 'components/${{ parameters.componentName }}/**/*UnitTest*/*.csproj'
              arguments: --configuration release
          - script:  echo ${{ parameters.componentName }}
          - script:  echo ${{ parameters.projectName }}
          - script:  ls -l components/${{ parameters.componentName }}
          # .NET Core publish:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core-cli#publish
          - task: DotNetCoreCLI@2
            displayName: 'Build / Publish'
            inputs:
              command: publish
              projects: 'components/${{ parameters.componentName }}/**/${{ parameters.projectName }}.csproj'
              publishWebProjects: True
              arguments: --configuration release --output build-output
              zipAfterPublish: False
          # Build Docker:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker#build-and-push
          - task: Docker@2
            displayName: Build and push Docker Image
            inputs:
              containerRegistry:  docker-hub
              repository: ${{ parameters.imageName }}
              command:  buildAndPush
              buildContext:  build-output
              Dockerfile: 'components/${{ parameters.componentName }}/**/Dockerfile'
              tags: '$(full-version)'
          # Copy files:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files
          - task: CopyFiles@2
            displayName:  Copy deployment directory
            inputs:
              sourceFolder: package
              targetFolder: $(Build.ArtifactStagingDirectory)/
          # Publish artefacts:  https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/package
              artifactName: package
